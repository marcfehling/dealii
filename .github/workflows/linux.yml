name: github-linux

on:
  push:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - ready_for_review

concurrency:
  group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

permissions:
  contents: read

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 4
  CTEST_OUTPUT_ON_FAILURE: 1
  CTEST_PARALLEL_LEVEL: 4
  MAKEFLAGS: "--jobs=4"

jobs:

  ########################
  # linux-debug-parallel #
  ########################

  linux-debug-parallel:
    # simple parallel debug build using g++

    name: ${{ matrix.ubuntu_version }} ${{ matrix.architecture }} debug parallel
    runs-on: ${{ matrix.os }}

    #
    # The following condition only runs the workflow on 'push' or if the
    # 'pull_request' is not a draft. This is only useful for hackathons or
    # other situations when the CI is massively overburdened with pull
    # requests.
    #
    # if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}

    strategy:
      fail-fast: false
      matrix:
        ubuntu_version: [jammy, noble]
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        include:
          - os: ubuntu-24.04
            architecture: amd64
          - os: ubuntu-24.04-arm
            architecture: arm64

    container:
      image: dealii/dependencies:${{ matrix.ubuntu_version }}
      options: --user root --env OMPI_ALLOW_RUN_AS_ROOT=1 --env OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1

    steps:
    - uses: actions/checkout@v4
    - name: info
      run: |
        mpicc -v
        cmake --version
    - name: configure deal.II
      run: |
        mkdir build
        cd build
        cmake -D CMAKE_BUILD_TYPE=Debug \
              -D DEAL_II_CXX_FLAGS='-Werror -std=c++20' \
              -D DEAL_II_EARLY_DEPRECATIONS=ON \
              -D DEAL_II_WITH_MPI="ON" \
              -D DEAL_II_WITH_CGAL="ON" \
              -D DEAL_II_WITH_HDF5="ON" \
              -D DEAL_II_WITH_METIS="ON" \
              -D DEAL_II_WITH_PETSC="ON" \
              -D DEAL_II_WITH_TRILINOS="ON" \
              -D DEAL_II_WITH_VTK="ON" \
              ..
    - name: print detailed.log
      run: cat build/detailed.log
    - name: build
      run: |
        cd build
        make VERBOSE=1
    - name: test
      run: |
        # Remove warning: "A high-performance Open MPI point-to-point
        # messaging module was unable to find any relevant network
        # interfaces."
        export OMPI_MCA_btl_base_warn_component_unused='0'

        cd build
        make \
          setup_tests_a-framework \
          setup_tests_examples \
          setup_tests_quick_tests
        ctest -VV
